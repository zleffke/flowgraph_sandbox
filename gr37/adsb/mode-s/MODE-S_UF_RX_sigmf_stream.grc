<?xml version='1.0' encoding='utf-8'?>
<?grc format='1' created='3.7.13'?>
<flow_graph>
  <timestamp>Sun Jan 10 08:34:52 2021</timestamp>
  <block>
    <key>options</key>
    <param>
      <key>author</key>
      <value></value>
    </param>
    <param>
      <key>window_size</key>
      <value>1600,2000</value>
    </param>
    <param>
      <key>category</key>
      <value>[GRC Hier Blocks]</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>description</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(8, 8)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>generate_options</key>
      <value>qt_gui</value>
    </param>
    <param>
      <key>hier_block_src_path</key>
      <value>.:</value>
    </param>
    <param>
      <key>id</key>
      <value>modes_uf_rx_sigmf_stream</value>
    </param>
    <param>
      <key>max_nouts</key>
      <value>0</value>
    </param>
    <param>
      <key>qt_qss_theme</key>
      <value></value>
    </param>
    <param>
      <key>realtime_scheduling</key>
      <value></value>
    </param>
    <param>
      <key>run_command</key>
      <value>{python} -u {filename}</value>
    </param>
    <param>
      <key>run_options</key>
      <value>prompt</value>
    </param>
    <param>
      <key>run</key>
      <value>True</value>
    </param>
    <param>
      <key>sizing_mode</key>
      <value>fixed</value>
    </param>
    <param>
      <key>thread_safe_setters</key>
      <value></value>
    </param>
    <param>
      <key>title</key>
      <value></value>
    </param>
    <param>
      <key>placement</key>
      <value>(0,0)</value>
    </param>
  </block>
  <block>
    <key>variable_qtgui_entry</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>value</key>
      <value>20</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1336, 156)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value>0,4,1,1</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>avg_len</value>
    </param>
    <param>
      <key>label</key>
      <value></value>
    </param>
    <param>
      <key>type</key>
      <value>real</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1360, 300)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>burst_length</value>
    </param>
    <param>
      <key>value</key>
      <value>600</value>
    </param>
  </block>
  <block>
    <key>variable_qtgui_entry</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>value</key>
      <value>5</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1336, 28)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value>0,8,1,1</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>cons_offset</value>
    </param>
    <param>
      <key>label</key>
      <value></value>
    </param>
    <param>
      <key>type</key>
      <value>real</value>
    </param>
  </block>
  <block>
    <key>variable_qtgui_entry</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>value</key>
      <value>20</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1456, 92)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value>0,9,1,1</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>det_avg_len</value>
    </param>
    <param>
      <key>label</key>
      <value></value>
    </param>
    <param>
      <key>type</key>
      <value>int</value>
    </param>
  </block>
  <block>
    <key>variable_qtgui_entry</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>value</key>
      <value>2</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1456, 28)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value>0,6,1,2</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>det_mult</value>
    </param>
    <param>
      <key>label</key>
      <value></value>
    </param>
    <param>
      <key>type</key>
      <value>real</value>
    </param>
  </block>
  <block>
    <key>variable_qtgui_entry</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>value</key>
      <value>100</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1336, 92)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value>0,2,1,2 </value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>qt_thresh</value>
    </param>
    <param>
      <key>label</key>
      <value></value>
    </param>
    <param>
      <key>type</key>
      <value>real</value>
    </param>
  </block>
  <block>
    <key>variable_qtgui_entry</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>value</key>
      <value>45</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(824, 4)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value>0,0,1,2</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>rf_gain</value>
    </param>
    <param>
      <key>label</key>
      <value></value>
    </param>
    <param>
      <key>type</key>
      <value>real</value>
    </param>
  </block>
  <block>
    <key>variable_rrc_filter_taps</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha</key>
      <value>0.25</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(696, 652)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>gain</key>
      <value>1.0</value>
    </param>
    <param>
      <key>id</key>
      <value>rrc_taps</value>
    </param>
    <param>
      <key>ntaps</key>
      <value>32</value>
    </param>
    <param>
      <key>samp_rate</key>
      <value>1</value>
    </param>
    <param>
      <key>sym_rate</key>
      <value>0.5</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(8, 76)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>value</key>
      <value>8000000</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(176, 4)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>sps</value>
    </param>
    <param>
      <key>value</key>
      <value>4000000</value>
    </param>
  </block>
  <block>
    <key>adsb_framer</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>threshold</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(88, 1836)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>adsb_framer_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>fs</key>
      <value></value>
    </param>
  </block>
  <block>
    <key>analog_agc2_xx</key>
    <param>
      <key>attack_rate</key>
      <value>1e-1</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>decay_rate</key>
      <value>1e-2</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(704, 140)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>gain</key>
      <value>1.0</value>
    </param>
    <param>
      <key>id</key>
      <value>analog_agc2_xx_0</value>
    </param>
    <param>
      <key>max_gain</key>
      <value>65536</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>reference</key>
      <value>1.0</value>
    </param>
    <param>
      <key>type</key>
      <value>complex</value>
    </param>
  </block>
  <block>
    <key>blocks_add_const_vxx</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>const</key>
      <value>1</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1024, 1420)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_add_const_vxx_1</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>blocks_char_to_float</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(880, 1420)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_char_to_float_0_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>scale</key>
      <value>1</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>blocks_char_to_float</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1184, 796)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_char_to_float_0_0_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>scale</key>
      <value>1</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>blocks_complex_to_mag_squared</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(200, 312)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_complex_to_mag_squared_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>blocks_complex_to_real</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(272, 880)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_complex_to_real_1</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>blocks_interleaved_short_to_complex</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(224, 172)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_interleaved_short_to_complex_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>swap</key>
      <value>False</value>
    </param>
    <param>
      <key>vector_input</key>
      <value>True</value>
    </param>
  </block>
  <block>
    <key>blocks_message_debug</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1360, 1496)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_message_debug_0</value>
    </param>
  </block>
  <block>
    <key>blocks_moving_average_xx</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(416, 292)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_moving_average_xx_0</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
    <param>
      <key>length</key>
      <value>int(avg_len)</value>
    </param>
    <param>
      <key>max_iter</key>
      <value>4000</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>scale</key>
      <value>1.0/avg_len</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
  </block>
  <block>
    <key>blocks_multiply_const_xx</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>const</key>
      <value>1.0 / 65536.0</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(384, 172)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_multiply_const_xx_0</value>
    </param>
    <param>
      <key>type</key>
      <value>complex</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>blocks_tag_debug</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>display</key>
      <value>True</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(816, 1812)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_tag_debug_0</value>
    </param>
    <param>
      <key>type</key>
      <value>byte</value>
    </param>
    <param>
      <key>filter</key>
      <value>""</value>
    </param>
    <param>
      <key>name</key>
      <value></value>
    </param>
    <param>
      <key>num_inputs</key>
      <value>1</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>blocks_throttle</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(552, 172)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_throttle_0</value>
    </param>
    <param>
      <key>ignoretag</key>
      <value>True</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>samples_per_second</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>type</key>
      <value>complex</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>dc_blocker_xx</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(448, 964)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>dc_blocker_xx_0</value>
    </param>
    <param>
      <key>length</key>
      <value>4</value>
    </param>
    <param>
      <key>long_form</key>
      <value>True</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>type</key>
      <value>ff</value>
    </param>
  </block>
  <block>
    <key>digital_binary_slicer_fb</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(280, 1944)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>digital_binary_slicer_fb_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>digital_binary_slicer_fb</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(672, 976)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>digital_binary_slicer_fb_2</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>digital_binary_slicer_fb</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1024, 800)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>digital_binary_slicer_fb_2_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>digital_clock_recovery_mm_xx</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(472, 492)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>gain_mu</key>
      <value>0.175</value>
    </param>
    <param>
      <key>gain_omega</key>
      <value>0.25*0.175*0.175</value>
    </param>
    <param>
      <key>id</key>
      <value>digital_clock_recovery_mm_xx_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>mu</key>
      <value>0.5</value>
    </param>
    <param>
      <key>omega_relative_limit</key>
      <value>0.005</value>
    </param>
    <param>
      <key>omega</key>
      <value>2</value>
    </param>
    <param>
      <key>type</key>
      <value>complex</value>
    </param>
  </block>
  <block>
    <key>digital_correlate_access_code_tag_xx</key>
    <param>
      <key>access_code</key>
      <value>11100000111000</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>P1+P2</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(224, 1404)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>digital_correlate_access_code_tag_xx_0_0_1_2</value>
    </param>
    <param>
      <key>type</key>
      <value>byte</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>tagname</key>
      <value>P1_P2</value>
    </param>
    <param>
      <key>threshold</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>digital_correlate_access_code_tag_xx</key>
    <param>
      <key>access_code</key>
      <value>10010000100100100001</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>P1+P2+sync Encoded</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(640, 1404)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>digital_correlate_access_code_tag_xx_0_0_1_2_2</value>
    </param>
    <param>
      <key>type</key>
      <value>byte</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>tagname</key>
      <value>sync</value>
    </param>
    <param>
      <key>threshold</key>
      <value>2</value>
    </param>
  </block>
  <block>
    <key>digital_correlate_access_code_xx_ts</key>
    <param>
      <key>access_code</key>
      <value>11100000111000</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(544, 1932)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>digital_correlate_access_code_xx_ts_0</value>
    </param>
    <param>
      <key>type</key>
      <value>byte</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>tagname</key>
      <value>packet</value>
    </param>
    <param>
      <key>threshold</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>digital_costas_loop_cc</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(744, 496)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>digital_costas_loop_cc_0</value>
    </param>
    <param>
      <key>w</key>
      <value>math.pi / 50</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>order</key>
      <value>2</value>
    </param>
    <param>
      <key>use_snr</key>
      <value>False</value>
    </param>
  </block>
  <block>
    <key>digital_diff_decoder_bb</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(456, 1420)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>digital_diff_decoder_bb_1</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>modulus</key>
      <value>2</value>
    </param>
  </block>
  <block>
    <key>digital_pfb_clock_sync_xxx</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>filter_size</key>
      <value>32</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(472, 628)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>digital_pfb_clock_sync_xxx_0</value>
    </param>
    <param>
      <key>init_phase</key>
      <value>16</value>
    </param>
    <param>
      <key>loop_bw</key>
      <value>math.pi/200</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>max_dev</key>
      <value>1.5</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>osps</key>
      <value>1</value>
    </param>
    <param>
      <key>sps</key>
      <value>2</value>
    </param>
    <param>
      <key>taps</key>
      <value>rrc_taps</value>
    </param>
    <param>
      <key>type</key>
      <value>ccf</value>
    </param>
  </block>
  <block>
    <key>epy_block</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>_io_cache</key>
      <value>('Peamble Stripper', 'pds_frame_sync', [('tag_name', "'packet'")], [('0', 'byte', 1)], [('out', 'message', 1)], "\n    Expects Correlate Access Code - Tag block upstream.\n    Tag indicates the last bit of the UF frame sync\n    Operates on unpacked byte stream.\n\n    Logic:\n     Detects a packet tag.\n     pulls out the following 112 + 7 bit pad (x2 due to sample rate)(frame minus frame preamble bits)\n     Packs unpacked bit vector into bytes\n     Emits a PMT/PDU Message of decoded frame\n     Emitted Frame should contain three data packets, each with a 12 bit 'word sync' starting each packet\n    ", ['tag_name'])</value>
    </param>
    <param>
      <key>_source_code</key>
      <value>#!/usr/bin/env python


import numpy
import pmt
import binascii
from gnuradio import gr

SEARCH = 1
COPY = 2

class pds_frame_sync(gr.sync_block):
    """
    Expects Correlate Access Code - Tag block upstream.
    Tag indicates the last bit of the UF frame sync
    Operates on unpacked byte stream.

    Logic:
     Detects a packet tag.
     pulls out the following 112 + 7 bit pad (x2 due to sample rate)(frame minus frame preamble bits)
     Packs unpacked bit vector into bytes
     Emits a PMT/PDU Message of decoded frame
     Emitted Frame should contain three data packets, each with a 12 bit 'word sync' starting each packet
    """
    def __init__(self, tag_name="packet"):
        gr.sync_block.__init__(self,
            name="Peamble Stripper",
            in_sig=[numpy.int8],
            out_sig=None)

        self.tag_name = tag_name
        self.message_port_register_out(pmt.intern("out"))
        self.len_encoded_msg = 112
        self.pds_msg = []
        self.msg_packed = []
        self.msg_count = 0
        self.state = SEARCH

    def pack_bytes(self):
        self.msg_count += 1
        a = [int("".join(map(str, self.pds_msg[i:i+8])), 2) for i in range(0, len(self.pds_msg), 8)]
        self.msg_packed = bytearray(a)

    def work(self, input_items, output_items):
        in0 = input_items[0]
        num_input_items = len(in0)
        print num_input_items
        return_value = num_input_items
        nread = self.nitems_read(0)

        if self.state == SEARCH:
            tags = self.get_tags_in_window(0, 0, num_input_items)
            if len(tags) &gt; 0:
                print "Tags Detected", 
                for t in tags:
                    t_str = pmt.symbol_to_string(t.key)
                    #print t_str
                    if t_str == self.tag_name:
                        #print "PACKET"
                        print t_str
                        del self.pds_msg[:]#empty encoded msg buffer
                        del self.msg_packed[:]#empty packed msg buffer
                        cur_idx = t.offset - nread
                        self.pds_msg.extend(in0[cur_idx:])
                        self.state = COPY

        elif self.state == COPY:
            cur_msg_len = len(self.pds_msg)
            if (cur_msg_len + num_input_items) &lt; self.len_encoded_msg:  #doesn't exceed max frame length
                self.pds_msg.extend(in0)
            else:
                num_remain = self.len_encoded_msg - cur_msg_len
                self.pds_msg.extend(in0[0:num_remain])
                return_value = num_remain
                self.pack_bytes()
                msg_str = "[{:d}] {:s}\n".format(self.msg_count, binascii.hexlify(self.msg_packed))
                pmt_msg = pmt.cons(pmt.PMT_NIL, pmt.intern(msg_str))

                print msg_str
                self.message_port_pub(pmt.intern('out'), pmt.cons(pmt.PMT_NIL, pmt.init_u8vector(len(self.msg_packed),self.msg_packed)))
                self.state = SEARCH #RESET to SEARCH State

        return return_value

</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(608, 1588)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>epy_block_0</value>
    </param>
    <param>
      <key>tag_name</key>
      <value>'sync'</value>
    </param>
  </block>
  <block>
    <key>epy_block</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>_io_cache</key>
      <value>('UF Decode', 'uf_decode', [('msg_filter', "'All Messages'"), ('verbose', 'True')], [('in', 'message', 1)], [('out', 'message', 1)], '\n    Expected Upstream Block:  UF Sync (Uplink Frame Sync)\n    Expected input:  PDU with 112 bits, UNPACKED byte format\n\n    Goal:\n        Attempts to decode packet, \n        determine UF type (i.e. UF0 = ACAS short air surveillance)\n        Decode address (ICAO) and check parity\n\n    Output:\n        JSON Object with decoded information\n    ', ['msg_filter', 'verbose'])</value>
    </param>
    <param>
      <key>_source_code</key>
      <value>#!/usr/bin/env python


import numpy as np
import pmt
import binascii
import math
import datetime
import struct
import sys
from gnuradio import gr

# Uplink Format, 5 bits
# Aeronautical Telecommunications: Annex 10 to the Convention on International Civil Aviation, Volume IV Surveillance and Collision Avoidance Systems. International Civil Aviation Organization (ICAO), fifth edition, July 2015
# Figure 3-7. Summary of Mode S interrogation or uplink formats
# Page 3-91 (pdf page 115)
UF_STR_LUT = (
    'Short Air-Air Surveillance (ACAS)',
    'Reserved',
    'Reserved',
    'Reserved',
    'Surveillance Altitude Request',
    'Surveillance Identity Request',
    'Reserved',
    'Reserved',
    'Reserved',
    'Reserved',
    'Reserved',
    'Mode-S Only All-Call',
    'Reserved',
    'Reserved',
    'Reserved',
    'Reserved',
    'Long Air-Air Surveillance (ACAS)',
    'Reserved',
    'Reserved',
    'Reserved for Military Use',
    'Comm-B Altitude Request',
    'Comm-B Identity Request',
    'Reserved for Military Use',
    'Reserved',
    'Comm-D (ELM)'
)

class uf_decode(gr.sync_block):
    """
    Expected Upstream Block:  UF Sync (Uplink Frame Sync)
    Expected input:  PDU with 112 bits, UNPACKED byte format

    Goal:
        Attempts to decode packet, 
        determine UF type (i.e. UF0 = ACAS short air surveillance)
        Decode address (ICAO) and check parity

    Output:
        JSON Object with decoded information
    """
    def __init__(self, msg_filter='All Messages', verbose = True):
        gr.sync_block.__init__(self,
            name="UF Decode",
            in_sig=None,
            out_sig=None)

        self.msg_filter = msg_filter
        self.verbose = verbose
        self.message_port_register_in(pmt.intern("in"))
        self.set_msg_handler(pmt.intern('in'), self.handler)
        self.message_port_register_out(pmt.intern("out"))

        # Initialize plane dictionary
        self.plane_dict = dict([])

        self.decoded = {}
        
    def work(self, input_items, output_items):
        assert(false)


    def handler(self, pdu):

        # Grab packet PDU data
        meta = pmt.to_python(pmt.car(pdu))
        vector = pmt.cdr(pdu)
        if not pmt.is_u8vector(vector):
            print "[ERROR] Received invalid message type. Expected u8vector"
            return

        vector = pmt.to_python(pmt.cdr(pdu))

        self.snr = meta['snr']
        self.meta = meta
        # print 'vector\n', vector
        # print 'vector.dtype\n', vector.dtype
        # print 'type(vector)\n', type(vector)
        self.bits = vector

        print meta
        print self.bits
        
        #data = list(pmt.u8vector_elements(msg))
        #packed = self._pack_bytes(data)
        #hex_str = binascii.hexlify(packed)
        #print data, hex_str
        #self._decode_type(packed)
        try:
            self._decode_header()
            parity_passed = self._check_parity()
        except Exception as e: # catch *all* exceptions
            print e
        #print self.decoded


    

    


    # http://www.bucharestairports.ro/files/pages_files/Vol_IV_-_4yh_ed,_July_2007.pdf
    # http://www.icao.int/APAC/Documents/edocs/cns/SSR_%20modesii.pdf
    # http://www.anteni.net/adsb/Doc/1090-WP30-18-DRAFT_DO-260B-V42.pdf
    # http://www.cats.com.kh/download.php?path=vdzw4dHS08mjtKi6vNi31Mbn0tnZ2eycn6ydmqPE19rT7Mze4cSYpsetmdXd0w==
    # http://www.sigidwiki.com/images/1/15/ADS-B_for_Dummies.pdf
    def _decode_header(self):  
        # Uplink Format, 5 bits
        self.uf = self.bin2dec(self.bits[0:0+5])
        if self.uf &lt;=24:
            if self.verbose:
                if self.msg_filter == 'All Messages':
                    print '\n'
                    print '----------------------------------------------------------------------'
                    print 'datetime:'.ljust(16) + '%s' % (self.meta['datetime'])
                    print 'SNR:'.ljust(16) + '%1.2f dB' % (self.meta['snr'])
		            #print 'UF{:d}'.format(self.uf)
                    print 'UF:'.ljust(16) + '%d %s' % (self.uf, UF_STR_LUT[self.uf])


    def bin2dec(self, bits):
        return int(''.join(map(str, bits)), 2)


    # http://jetvision.de/sbs/adsb/crc.htm
    def _check_parity(self):
        # DF CRC polynomial (0xFFFA048) = 1 + x + x^2 + x^3 + x^4 + x^5 + x^6 + x^7 + x^8 + x^9 + x^10 + x^11 + x^12 + x^14 + x^21 + x^24
        crc_poly = np.array([1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,1,0,0,1])        
        # UF CRC polynomial (0x1205FFF) = 1 + x^3 + x^10 + x^12 + x^13 + x^14 + x^15 + X^16 + x^17 + x^18 + x^19 + X^20 + x^21 + x^22 + x^23 + x^24
        #crc_poly = np.array([1,0,0,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1])

        if self.msg_filter == 'All Messages':
            if self.uf in [0,4,5]:
                # 56 bit payload
                self.payload_length = 56

                # Address/Parity, 24 bits
                ap_bits = self.bits[32:32+24]

                crc_bits = self.compute_crc(self.bits[0:self.payload_length-24], crc_poly)            
                crc = self.bin2dec(crc_bits)

                # XOR the computed CRC with the AP, the result should be the
                # interrogated plane's ICAO address
                self.aa_bits = crc_bits ^ ap_bits
                self.aa = self.bin2dec(self.aa_bits)
                self.aa_str = '%06x' % (self.aa)

                # If the ICAO address is in our plane dictionary,
                # then it's safe to assume the CRC passes
                parity_passed = self.plane_dict.has_key(self.aa_str) == True

                if parity_passed == True:
                    if self.verbose:
                        print 'CRC:'.ljust(16) + 'Passed (Recognized AA from AP)'
                        print 'AA:'.ljust(16) + '%s' % (self.aa_str)
                    return 1
                else:
                    if self.verbose:
                        print 'CRC:'.ljust(16) + 'Failed (Unrecognized AA from AP)'
                        print 'AA:'.ljust(16) + '%s' % (self.aa_str)
                    return 0

            elif self.uf in [11]:
                # 56 bit payload
                self.payload_length = 56

                # Parity/Interrogator ID, 24 bits
                pi_bits = self.bits[32:32+24]
                pi = self.bin2dec(pi_bits)

                crc_bits = self.compute_crc(self.bits[0:self.payload_length-24], crc_poly)            
                crc = self.bin2dec(crc_bits)

                # result_bits = pi_bits ^ crc_bits
                # print 'pi_bits', pi_bits
                # print 'crc_bits', crc_bits
                # print 'result_bits', result_bits
                # parity_passed = (pi_bits[:7] == crc_bits[:7])

                parity_passed = (pi == crc)

                # 17 0s
                # Code Label, 3 bits (3.1.2.5.2.1.3)
                # Interrogator Code, 4 bits (3.1.2.5.2.1.2)

                if parity_passed == True:
                    if self.verbose:
                        print 'CRC:'.ljust(16) + 'Passed'
                    return 1
                else:
                    if self.verbose:
                        print 'CRC:'.ljust(16) + 'Failed (PI-CRC = %d)' % (pi-crc)
                    return 0

            elif self.uf in [16,20,21,24]:
                # 112 bit payload
                self.payload_length = 112

                # Address/Parity, 24 bits
                ap_bits = self.bits[88:88+24]

                crc_bits = self.compute_crc(self.bits[0:self.payload_length-24], crc_poly)            
                crc = self.bin2dec(crc_bits)

                # XOR the computed CRC with the AP, the result should be the
                # interrogated plane's ICAO address
                self.aa_bits = crc_bits ^ ap_bits
                self.aa = self.bin2dec(self.aa_bits)
                self.aa_str = '%06x' % (self.aa)

                # If the ICAO address is in our plane dictionary,
                # then it's safe to assume the CRC passes
                parity_passed = self.plane_dict.has_key(self.aa_str) == True

                if parity_passed == True:
                    if self.verbose:
                        print 'CRC:'.ljust(16) + 'Passed (Recognized AA from AP)'
                        print 'AA:'.ljust(16) + '%s' % (self.aa_str)
                    return 1
                else:
                    if self.verbose:
                        print 'CRC:'.ljust(16) + 'Failed (Unrecognized AA from AP)'
                        print 'AA:'.ljust(16) + '%s' % (self.aa_str)
                    return 0

        if self.msg_filter == 'All Messages' or self.msg_filter == 'Extended Squitter Only':
            if self.uf in [17,18,19]:
                # 112 bit payload
                self.payload_length = 112

                # Parity/Interrogator ID, 24 bits
                pi = self.bin2dec(self.bits[88:88+24])

                crc_bits = self.compute_crc(self.bits[0:self.payload_length-24], crc_poly)
                crc = self.bin2dec(crc_bits)

                parity_passed = (pi == crc)

                if parity_passed == True:
                    if self.verbose:
                        print 'CRC:'.ljust(16) + 'Passed'
                    return 1
                else:
                    if self.verbose:
                        print 'CRC:'.ljust(16) + 'Failed (PI-CRC = %d)' % (pi-crc)
                    return 0

        # Unsupported downlink format
        #print 'Unsupported downlink format'
        return 0 # Parity failed


    # http://www.radarspotters.eu/forum/index.php?topic=5617.msg41293#msg41293
    # http://www.eurocontrol.int/eec/gallery/content/public/document/eec/report/1994/022_CRC_calculations_for_Mode_S.pdf
    def compute_crc(self, data, poly):
        num_data_bits = len(data)
        num_crc_bits = len(poly)-1

        # Multiply the data by x^(num_crc_bits), which is equivalent to a 
        # left shift operation which is equivalent to appending zeros
        data = np.append(data, np.zeros(num_crc_bits, dtype=int))

        for ii in range(0,num_data_bits):
            if data[ii] == 1:
                # XOR the data with the CRC polynomial
                # NOTE: The data polynomial and CRC polynomial are Galois Fields
                # in GF(2)
                data[ii:ii+num_crc_bits+1] ^= poly

        crc = data[num_data_bits:num_data_bits+num_crc_bits]

        return crc

    def _decode_type_old(self,data):
        print type(data), binascii.hexlify(data)
        
        #Frame Type:  bits 0-4 (1-5)
        a = data[0]
        uf = (a &gt;&gt; 3) &amp; 0x1F #Hi Nibble
        if self.verbose: 
            #print "Type field: {:08b}".format(uf)
            if    uf==0: print "DF0: Short Air-to-air surveillance (ACAS)"
            elif  uf==4: print "DF4: Surveillance, altitude request"
            elif  uf==5: print "DF5: Surveillance, identify request"
            elif uf==11: print "DF11: Mode-S only all call"
            elif uf==16: print "DF16: Long Air-to-air surveillance (ACAS)"
            elif uf==20: print "DF20: Comm-A, altitude request"
            elif uf==21: print "DF21: Comm-A, identify request"
            elif uf==21: print "DF21: Comm-A, identify request"
            elif uf==24: print "DF24: Comm-C, ELM"
            elif uf==19 or uf==22: print "DF{:d}: Reserved, Military Use".format(uf)
            else: print "DF{:d}: Reserved".format(uf)
        self.decoded['type'] = "UF{:d}".format(uf)
        
        #RL And AQ
        rl_aq_byte = data[1]
        self.decoded['RL'] = (rl_aq_byte &gt;&gt; 7) &amp; 0x01
        self.decoded['AQ'] = (rl_aq_byte &gt;&gt; 1) &amp; 0x01

        #BDS
        bds_bytes = data[1:3]
        if self.verbose: 
            print len(bds_bytes), numpy.uint16(bds_bytes)# &amp; 0xFFFF)

        bds = numpy.uint16(struct.unpack('&lt;H',bds_bytes))[0] # &gt;&gt; 1) &amp; 0x7FFFFF)
        
        print bds, binascii.hexlify(data[1:3]), binascii.hexlify(bds)
        #self.decoded['BDS'] = binascii.hexlify(numpy.uint16(bds_bytes &amp; 0xFF))

    def _pack_bytes_old(self, unpacked):
        #self.msg_count += 1
        a = [int("".join(map(str, unpacked[i:i+8])), 2) for i in range(0, len(unpacked), 8)]
        packed = bytearray(a)
        return packed
</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1368, 1564)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>epy_block_0_0</value>
    </param>
    <param>
      <key>msg_filter</key>
      <value>'All Messages'</value>
    </param>
    <param>
      <key>verbose</key>
      <value>True</value>
    </param>
  </block>
  <block>
    <key>epy_block</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>_io_cache</key>
      <value>('(UF) Sync', 'uf_frame_sync', [('tag_name', "'packet'"), ('msg_len', '112'), ('samp_rate', '8000000.0'), ('sps', '2')], [('0', 'byte', 1)], [('out', 'message', 1)], "\n    Expects Correlate Access Code - Tag block upstream.\n    Tag indicates the last bit of the UF frame sync\n    Operates on unpacked byte stream.\n\n    Logic:\n     Detects a packet tag.\n     pulls out the following 112 bits (max UF frame)\n     Emits a PMT/PDU Message of decoded frame\n    \n    Time Control:\n     If 'rx_time' tag exists (from UHD / SigMF), use to create 'datetime'\n\n    OUTPUT:\n     async PDU with metadata and UNPACKED 112 bit frame\n\n    ", ['msg_len', 'samp_rate', 'sps', 'tag_name'])</value>
    </param>
    <param>
      <key>_source_code</key>
      <value>#!/usr/bin/env python


import numpy
import pmt
import binascii
import numpy
import math
import datetime
from gnuradio import gr

SEARCH = 1
COPY = 2

class uf_frame_sync(gr.sync_block):
    """
    Expects Correlate Access Code - Tag block upstream.
    Tag indicates the last bit of the UF frame sync
    Operates on unpacked byte stream.

    Logic:
     Detects a packet tag.
     pulls out the following 112 bits (max UF frame)
     Emits a PMT/PDU Message of decoded frame
    
    Time Control:
     If 'rx_time' tag exists (from UHD / SigMF), use to create 'datetime'

    OUTPUT:
     async PDU with metadata and UNPACKED 112 bit frame

    """
    def __init__(self, tag_name="packet", msg_len=112, samp_rate = 8e6, sps = 2):
        gr.sync_block.__init__(self,
            name="(UF) Sync",
            in_sig=[numpy.int8],
            out_sig=None)

        self.tag_name = tag_name
        self.offset_key = self.tag_name + "_offset"
        self.message_port_register_out(pmt.intern("out"))
        self.msg_len = msg_len
        self.samp_rate = samp_rate
        self.sps = sps
        self.samp_period = 1.0 / (samp_rate/sps) #seconds per sample
        
    def work(self, input_items, output_items):
        in0 = input_items[0]
        num_input_items = len(in0)
        return_value = num_input_items
        nread = self.nitems_read(0)

        #read in all tags - convert to dict
        tags = self.get_tags_in_window(0, 0, num_input_items)
        self.tag = {}
        for t in tags:
            key = pmt.to_python(t.key) # convert from PMT to python string
            value = pmt.to_python(t.value) 
            self.tag[key] = value
            if key == self.tag_name:
                offset = t.offset
                self.tag[self.offset_key] = offset-nread #offset within window
        
        #look for specific trigger tag (probably 'sync') to indicate frame delimiter
        if all(x in self.tag.keys() for x in [self.tag_name, 'rx_time', 'es::event_time']):
            idx_start = self.tag[self.offset_key]
            idx_stop  = idx_start + self.msg_len
            msg = in0[idx_start:idx_stop]
            
            #Correct timestamp for sample offset in window            
            time_offset = self.samp_period * self.tag[self.offset_key]
            time_delta = self.tag['es::event_time'] / (self.samp_rate * self.sps)
            rx_int_sec = self.tag['rx_time'][1][0]
            rx_frac_sec = self.tag['rx_time'][1][1]
            td = math.modf(time_delta)
            dt = (numpy.int64(rx_int_sec + td[1]) , rx_frac_sec + td[0])
            ts = numpy.datetime64(datetime.datetime.utcfromtimestamp(dt[0]))
            ts = ts + numpy.timedelta64(int(dt[1]*1e9), 'ns') + numpy.timedelta64(int(time_offset*1e9), 'ns')
            ts_ns = numpy.datetime_as_string(ts) +"Z"
            self.tag['datetime'] = ts_ns
            
            #Create output pdu and emit
            meta = pmt.to_pmt(self.tag)
            vector = pmt.to_pmt(msg)
            pdu = pmt.cons(meta, vector)
            self.message_port_pub(pmt.intern('out'), pdu)
        
        return num_input_items


</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(880, 1476)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>epy_block_1</value>
    </param>
    <param>
      <key>msg_len</key>
      <value>112</value>
    </param>
    <param>
      <key>samp_rate</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>sps</key>
      <value>2</value>
    </param>
    <param>
      <key>tag_name</key>
      <value>'sync'</value>
    </param>
  </block>
  <block>
    <key>epy_block</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>_io_cache</key>
      <value>('Uplink Frame (UF) Sync', 'uf_frame_sync', [('tag_name', "'packet'"), ('msg_len', '112')], [('0', 'byte', 1)], [('out', 'message', 1)], '\n    Expects Correlate Access Code - Tag block upstream.\n    Tag indicates the last bit of the UF frame sync\n    Operates on unpacked byte stream.\n\n    Logic:\n     Detects a packet tag.\n     pulls out the following 112\n     Packs unpacked bit vector into bytes\n     Emits a PMT/PDU Message of decoded frame\n    ', ['msg_len', 'tag_name'])</value>
    </param>
    <param>
      <key>_source_code</key>
      <value>#!/usr/bin/env python


import numpy
import pmt
import binascii
from gnuradio import gr

SEARCH = 1
COPY = 2

class uf_frame_sync(gr.sync_block):
    """
    Expects Correlate Access Code - Tag block upstream.
    Tag indicates the last bit of the UF frame sync
    Operates on unpacked byte stream.

    Logic:
     Detects a packet tag.
     pulls out the following 112
     Packs unpacked bit vector into bytes
     Emits a PMT/PDU Message of decoded frame
    """
    def __init__(self, tag_name="packet", msg_len=112):
        gr.sync_block.__init__(self,
            name="Uplink Frame (UF) Sync",
            in_sig=[numpy.int8],
            out_sig=None)

        self.tag_name = tag_name
        self.message_port_register_out(pmt.intern("out"))
        #self.len_encoded_msg = 112
        self.msg_len = msg_len
        self.msg = []
        self.msg_packed = []
        self.msg_count = 0
        self.state = SEARCH
        self.tags = {}

    def pack_bytes(self):
        self.msg_count += 1
        a = [int("".join(map(str, self.pds_msg[i:i+8])), 2) for i in range(0, len(self.pds_msg), 8)]
        self.msg_packed = bytearray(a)


    def work(self, input_items, output_items):
        in0 = input_items[0]
        num_input_items = len(in0)
        return_value = num_input_items
        nread = self.nitems_read(0)
        print num_input_items, nread,
        print ""

        if self.state == SEARCH:
            tags = self.get_tags_in_window(0, 0, num_input_items)
            self.tag = {}
            for t in tags:
                offset = t.offset
                key = pmt.to_python(t.key) # convert from PMT to python string
                value = pmt.to_python(t.value) 
                self.tag[key] = value
                if key == self.tag_name:
                    self.tag[key] = offset - nread
            if self.tag_name in self.tag.keys():
                print "SYNC!", nread
                print self.tag
                del self.msg[:]
                idx_start = self.tag[self.tag_name]
                idx_stop  = idx_start + self.msg_len
                self.msg.extend(in0[idx_start:idx_stop])
                print len(self.msg), self.msg
                #self.state = COPY
            
        return num_input_items

    def work_old(self, input_items, output_items):
        in0 = input_items[0]
        num_input_items = len(in0)
        return_value = num_input_items
        nread = self.nitems_read(0)
        print num_input_items, nread

        if self.state == SEARCH:
            tags = self.get_tags_in_window(0, 0, num_input_items)
            if len(tags) &gt; 0:
                print "Tags Detected !"
                for t in tags:
                    t_str = pmt.symbol_to_string(t.key)
                    #print t_str
                    if t_str == self.tag_name:
                        #print "PACKET"
                        #print t_str
                        del self.pds_msg[:]#empty encoded msg buffer
                        del self.msg_packed[:]#empty packed msg buffer
                        cur_idx = t.offset - nread
                        self.pds_msg.extend(in0[cur_idx:])
                        cur_msg_len = len(self.pds_msg)
                        print cur_msg_len &lt; self.len_encoded_msg,
                        print t_str, num_input_items, cur_idx, len(self.pds_msg)
                        self.state = COPY

        elif self.state == COPY:
            cur_msg_len = len(self.pds_msg)
            if (cur_msg_len + num_input_items) &lt; self.len_encoded_msg:  #doesn't exceed max frame length
                self.pds_msg.extend(in0)
            else:
                num_remain = self.len_encoded_msg - cur_msg_len
                self.pds_msg.extend(in0[0:num_remain])
                return_value = num_remain
                self.pack_bytes()
                msg_str = "[{:d}] {:s}\n".format(self.msg_count, binascii.hexlify(self.msg_packed))
                pmt_msg = pmt.cons(pmt.PMT_NIL, pmt.intern(msg_str))

                print msg_str
                self.message_port_pub(pmt.intern('out'), pmt.cons(pmt.PMT_NIL, pmt.init_u8vector(len(self.msg_packed),self.msg_packed)))
                self.state = SEARCH #RESET to SEARCH State

        return return_value

</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(608, 1524)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>epy_block_1</value>
    </param>
    <param>
      <key>msg_len</key>
      <value>112</value>
    </param>
    <param>
      <key>tag_name</key>
      <value>'sync'</value>
    </param>
  </block>
  <block>
    <key>fosphor_glfw_sink_c</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>freq_center</key>
      <value>0</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1104, 220)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>fosphor_glfw_sink_c_0</value>
    </param>
    <param>
      <key>freq_span</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>wintype</key>
      <value>window.WIN_BLACKMAN_hARRIS</value>
    </param>
  </block>
  <block>
    <key>fosphor_qt_sink_c</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>freq_center</key>
      <value>0</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1104, 44)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value>0,0,4,4</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>fosphor_qt_sink_c_0</value>
    </param>
    <param>
      <key>freq_span</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>wintype</key>
      <value>window.WIN_BLACKMAN_hARRIS</value>
    </param>
  </block>
  <block>
    <key>import</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(296, 4)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>import_0</value>
    </param>
    <param>
      <key>import</key>
      <value>import numpy</value>
    </param>
  </block>
  <block>
    <key>import</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(400, 4)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>import_0_0</value>
    </param>
    <param>
      <key>import</key>
      <value>import time; import math</value>
    </param>
  </block>
  <block>
    <key>low_pass_filter</key>
    <param>
      <key>beta</key>
      <value>6.76</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>cutoff_freq</key>
      <value>3e6</value>
    </param>
    <param>
      <key>decim</key>
      <value>1</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>type</key>
      <value>fir_filter_ccf</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(888, 124)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>gain</key>
      <value>1</value>
    </param>
    <param>
      <key>id</key>
      <value>low_pass_filter_0</value>
    </param>
    <param>
      <key>interp</key>
      <value>1</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>samp_rate</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>width</key>
      <value>250e3</value>
    </param>
    <param>
      <key>win</key>
      <value>firdes.WIN_BLACKMAN</value>
    </param>
  </block>
  <block>
    <key>low_pass_filter</key>
    <param>
      <key>beta</key>
      <value>6.76</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>cutoff_freq</key>
      <value>2.75e6</value>
    </param>
    <param>
      <key>decim</key>
      <value>1</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>2</value>
    </param>
    <param>
      <key>type</key>
      <value>fir_filter_ccf</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(248, 476)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>gain</key>
      <value>1</value>
    </param>
    <param>
      <key>id</key>
      <value>low_pass_filter_0_0</value>
    </param>
    <param>
      <key>interp</key>
      <value>1</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>samp_rate</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>width</key>
      <value>250e3</value>
    </param>
    <param>
      <key>win</key>
      <value>firdes.WIN_BLACKMAN</value>
    </param>
  </block>
  <block>
    <key>mapper_demapper_soft</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(944, 700)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>mapper_demapper_soft_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>modtype</key>
      <value>mapper.BPSK</value>
    </param>
    <param>
      <key>symbol_values</key>
      <value>[0,1]</value>
    </param>
  </block>
  <block>
    <key>note</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(584, 1796)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>note_2</value>
    </param>
    <param>
      <key>note</key>
      <value>ID UF Header and TAG</value>
    </param>
  </block>
  <block>
    <key>note</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(848, 1892)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>note_3</value>
    </param>
    <param>
      <key>note</key>
      <value>Wait for Tag, pass next 112 bits as vector</value>
    </param>
  </block>
  <block>
    <key>note</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(336, 1948)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>note_4</value>
    </param>
    <param>
      <key>note</key>
      <value>DECIMATE</value>
    </param>
  </block>
  <block>
    <key>note</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1368, 1836)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>note_5</value>
    </param>
    <param>
      <key>note</key>
      <value>BPSK DEMOD</value>
    </param>
  </block>
  <block>
    <key>note</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1368, 1892)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>note_6</value>
    </param>
    <param>
      <key>note</key>
      <value>DIFF DECODE</value>
    </param>
  </block>
  <block>
    <key>pyqt_pdu_lambda</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(320, 1948)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>pyqt_pdu_lambda_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>fn</key>
      <value>lambda x: numpy.array ([x[i] for i in range(0, len(x), sps)])</value>
    </param>
  </block>
  <block>
    <key>pyqt_pdu_lambda</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(960, 1748)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>pyqt_pdu_lambda_1</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>fn</key>
      <value>lambda x: numpy.array([(i+1)/2 for i in x])</value>
    </param>
  </block>
  <block>
    <key>pyqt_pdu_lambda</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(824, 1764)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>pyqt_pdu_lambda_2</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>fn</key>
      <value>lambda x: numpy.array([(x[i] +x[i-1]) %2 for i in range(1,lex(x))])</value>
    </param>
  </block>
  <block>
    <key>qtgui_const_sink_x</key>
    <param>
      <key>autoscale</key>
      <value>True</value>
    </param>
    <param>
      <key>axislabels</key>
      <value>True</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1136, 484)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value>1,8,2,2</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>grid</key>
      <value>True</value>
    </param>
    <param>
      <key>id</key>
      <value>qtgui_const_sink_x_0</value>
    </param>
    <param>
      <key>legend</key>
      <value>True</value>
    </param>
    <param>
      <key>alpha1</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color1</key>
      <value>"blue"</value>
    </param>
    <param>
      <key>label1</key>
      <value></value>
    </param>
    <param>
      <key>marker1</key>
      <value>0</value>
    </param>
    <param>
      <key>style1</key>
      <value>0</value>
    </param>
    <param>
      <key>width1</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha10</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color10</key>
      <value>"red"</value>
    </param>
    <param>
      <key>label10</key>
      <value></value>
    </param>
    <param>
      <key>marker10</key>
      <value>0</value>
    </param>
    <param>
      <key>style10</key>
      <value>0</value>
    </param>
    <param>
      <key>width10</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha2</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color2</key>
      <value>"red"</value>
    </param>
    <param>
      <key>label2</key>
      <value></value>
    </param>
    <param>
      <key>marker2</key>
      <value>0</value>
    </param>
    <param>
      <key>style2</key>
      <value>0</value>
    </param>
    <param>
      <key>width2</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha3</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color3</key>
      <value>"red"</value>
    </param>
    <param>
      <key>label3</key>
      <value></value>
    </param>
    <param>
      <key>marker3</key>
      <value>0</value>
    </param>
    <param>
      <key>style3</key>
      <value>0</value>
    </param>
    <param>
      <key>width3</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha4</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color4</key>
      <value>"red"</value>
    </param>
    <param>
      <key>label4</key>
      <value></value>
    </param>
    <param>
      <key>marker4</key>
      <value>0</value>
    </param>
    <param>
      <key>style4</key>
      <value>0</value>
    </param>
    <param>
      <key>width4</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha5</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color5</key>
      <value>"red"</value>
    </param>
    <param>
      <key>label5</key>
      <value></value>
    </param>
    <param>
      <key>marker5</key>
      <value>0</value>
    </param>
    <param>
      <key>style5</key>
      <value>0</value>
    </param>
    <param>
      <key>width5</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha6</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color6</key>
      <value>"red"</value>
    </param>
    <param>
      <key>label6</key>
      <value></value>
    </param>
    <param>
      <key>marker6</key>
      <value>0</value>
    </param>
    <param>
      <key>style6</key>
      <value>0</value>
    </param>
    <param>
      <key>width6</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha7</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color7</key>
      <value>"red"</value>
    </param>
    <param>
      <key>label7</key>
      <value></value>
    </param>
    <param>
      <key>marker7</key>
      <value>0</value>
    </param>
    <param>
      <key>style7</key>
      <value>0</value>
    </param>
    <param>
      <key>width7</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha8</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color8</key>
      <value>"red"</value>
    </param>
    <param>
      <key>label8</key>
      <value></value>
    </param>
    <param>
      <key>marker8</key>
      <value>0</value>
    </param>
    <param>
      <key>style8</key>
      <value>0</value>
    </param>
    <param>
      <key>width8</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha9</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color9</key>
      <value>"red"</value>
    </param>
    <param>
      <key>label9</key>
      <value></value>
    </param>
    <param>
      <key>marker9</key>
      <value>0</value>
    </param>
    <param>
      <key>style9</key>
      <value>0</value>
    </param>
    <param>
      <key>width9</key>
      <value>1</value>
    </param>
    <param>
      <key>name</key>
      <value>""</value>
    </param>
    <param>
      <key>nconnections</key>
      <value>1</value>
    </param>
    <param>
      <key>size</key>
      <value>burst_length/2</value>
    </param>
    <param>
      <key>tr_chan</key>
      <value>0</value>
    </param>
    <param>
      <key>tr_level</key>
      <value>0.0</value>
    </param>
    <param>
      <key>tr_mode</key>
      <value>qtgui.TRIG_MODE_FREE</value>
    </param>
    <param>
      <key>tr_slope</key>
      <value>qtgui.TRIG_SLOPE_POS</value>
    </param>
    <param>
      <key>tr_tag</key>
      <value>""</value>
    </param>
    <param>
      <key>type</key>
      <value>complex</value>
    </param>
    <param>
      <key>update_time</key>
      <value>0.010</value>
    </param>
    <param>
      <key>xmax</key>
      <value>2</value>
    </param>
    <param>
      <key>xmin</key>
      <value>-2</value>
    </param>
    <param>
      <key>ymax</key>
      <value>2</value>
    </param>
    <param>
      <key>ymin</key>
      <value>-2</value>
    </param>
  </block>
  <block>
    <key>qtgui_number_sink</key>
    <param>
      <key>autoscale</key>
      <value>False</value>
    </param>
    <param>
      <key>avg</key>
      <value>0</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(400, 1780)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value></value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>graph_type</key>
      <value>qtgui.NUM_GRAPH_HORIZ</value>
    </param>
    <param>
      <key>id</key>
      <value>qtgui_number_sink_0</value>
    </param>
    <param>
      <key>type</key>
      <value>byte</value>
    </param>
    <param>
      <key>color1</key>
      <value>("black", "black")</value>
    </param>
    <param>
      <key>factor1</key>
      <value>1</value>
    </param>
    <param>
      <key>label1</key>
      <value></value>
    </param>
    <param>
      <key>unit1</key>
      <value></value>
    </param>
    <param>
      <key>color10</key>
      <value>("black", "black")</value>
    </param>
    <param>
      <key>factor10</key>
      <value>1</value>
    </param>
    <param>
      <key>label10</key>
      <value></value>
    </param>
    <param>
      <key>unit10</key>
      <value></value>
    </param>
    <param>
      <key>color2</key>
      <value>("black", "black")</value>
    </param>
    <param>
      <key>factor2</key>
      <value>1</value>
    </param>
    <param>
      <key>label2</key>
      <value></value>
    </param>
    <param>
      <key>unit2</key>
      <value></value>
    </param>
    <param>
      <key>color3</key>
      <value>("black", "black")</value>
    </param>
    <param>
      <key>factor3</key>
      <value>1</value>
    </param>
    <param>
      <key>label3</key>
      <value></value>
    </param>
    <param>
      <key>unit3</key>
      <value></value>
    </param>
    <param>
      <key>color4</key>
      <value>("black", "black")</value>
    </param>
    <param>
      <key>factor4</key>
      <value>1</value>
    </param>
    <param>
      <key>label4</key>
      <value></value>
    </param>
    <param>
      <key>unit4</key>
      <value></value>
    </param>
    <param>
      <key>color5</key>
      <value>("black", "black")</value>
    </param>
    <param>
      <key>factor5</key>
      <value>1</value>
    </param>
    <param>
      <key>label5</key>
      <value></value>
    </param>
    <param>
      <key>unit5</key>
      <value></value>
    </param>
    <param>
      <key>color6</key>
      <value>("black", "black")</value>
    </param>
    <param>
      <key>factor6</key>
      <value>1</value>
    </param>
    <param>
      <key>label6</key>
      <value></value>
    </param>
    <param>
      <key>unit6</key>
      <value></value>
    </param>
    <param>
      <key>color7</key>
      <value>("black", "black")</value>
    </param>
    <param>
      <key>factor7</key>
      <value>1</value>
    </param>
    <param>
      <key>label7</key>
      <value></value>
    </param>
    <param>
      <key>unit7</key>
      <value></value>
    </param>
    <param>
      <key>color8</key>
      <value>("black", "black")</value>
    </param>
    <param>
      <key>factor8</key>
      <value>1</value>
    </param>
    <param>
      <key>label8</key>
      <value></value>
    </param>
    <param>
      <key>unit8</key>
      <value></value>
    </param>
    <param>
      <key>color9</key>
      <value>("black", "black")</value>
    </param>
    <param>
      <key>factor9</key>
      <value>1</value>
    </param>
    <param>
      <key>label9</key>
      <value></value>
    </param>
    <param>
      <key>unit9</key>
      <value></value>
    </param>
    <param>
      <key>max</key>
      <value>1</value>
    </param>
    <param>
      <key>min</key>
      <value>-1</value>
    </param>
    <param>
      <key>name</key>
      <value>""</value>
    </param>
    <param>
      <key>nconnections</key>
      <value>1</value>
    </param>
    <param>
      <key>update_time</key>
      <value>0.10</value>
    </param>
  </block>
  <block>
    <key>qtgui_time_sink_x</key>
    <param>
      <key>autoscale</key>
      <value>True</value>
    </param>
    <param>
      <key>axislabels</key>
      <value>True</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>ctrlpanel</key>
      <value>False</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>entags</key>
      <value>True</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(672, 868)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value>3,0,2,3</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>grid</key>
      <value>False</value>
    </param>
    <param>
      <key>id</key>
      <value>qtgui_time_sink_x_0</value>
    </param>
    <param>
      <key>legend</key>
      <value>False</value>
    </param>
    <param>
      <key>alpha1</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color1</key>
      <value>"blue"</value>
    </param>
    <param>
      <key>label1</key>
      <value></value>
    </param>
    <param>
      <key>marker1</key>
      <value>0</value>
    </param>
    <param>
      <key>style1</key>
      <value>1</value>
    </param>
    <param>
      <key>width1</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha10</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color10</key>
      <value>"blue"</value>
    </param>
    <param>
      <key>label10</key>
      <value></value>
    </param>
    <param>
      <key>marker10</key>
      <value>-1</value>
    </param>
    <param>
      <key>style10</key>
      <value>1</value>
    </param>
    <param>
      <key>width10</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha2</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color2</key>
      <value>"red"</value>
    </param>
    <param>
      <key>label2</key>
      <value></value>
    </param>
    <param>
      <key>marker2</key>
      <value>-1</value>
    </param>
    <param>
      <key>style2</key>
      <value>1</value>
    </param>
    <param>
      <key>width2</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha3</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color3</key>
      <value>"green"</value>
    </param>
    <param>
      <key>label3</key>
      <value></value>
    </param>
    <param>
      <key>marker3</key>
      <value>-1</value>
    </param>
    <param>
      <key>style3</key>
      <value>1</value>
    </param>
    <param>
      <key>width3</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha4</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color4</key>
      <value>"black"</value>
    </param>
    <param>
      <key>label4</key>
      <value></value>
    </param>
    <param>
      <key>marker4</key>
      <value>-1</value>
    </param>
    <param>
      <key>style4</key>
      <value>1</value>
    </param>
    <param>
      <key>width4</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha5</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color5</key>
      <value>"cyan"</value>
    </param>
    <param>
      <key>label5</key>
      <value></value>
    </param>
    <param>
      <key>marker5</key>
      <value>-1</value>
    </param>
    <param>
      <key>style5</key>
      <value>1</value>
    </param>
    <param>
      <key>width5</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha6</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color6</key>
      <value>"magenta"</value>
    </param>
    <param>
      <key>label6</key>
      <value></value>
    </param>
    <param>
      <key>marker6</key>
      <value>-1</value>
    </param>
    <param>
      <key>style6</key>
      <value>1</value>
    </param>
    <param>
      <key>width6</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha7</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color7</key>
      <value>"yellow"</value>
    </param>
    <param>
      <key>label7</key>
      <value></value>
    </param>
    <param>
      <key>marker7</key>
      <value>-1</value>
    </param>
    <param>
      <key>style7</key>
      <value>1</value>
    </param>
    <param>
      <key>width7</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha8</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color8</key>
      <value>"dark red"</value>
    </param>
    <param>
      <key>label8</key>
      <value></value>
    </param>
    <param>
      <key>marker8</key>
      <value>-1</value>
    </param>
    <param>
      <key>style8</key>
      <value>1</value>
    </param>
    <param>
      <key>width8</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha9</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color9</key>
      <value>"dark green"</value>
    </param>
    <param>
      <key>label9</key>
      <value></value>
    </param>
    <param>
      <key>marker9</key>
      <value>-1</value>
    </param>
    <param>
      <key>style9</key>
      <value>1</value>
    </param>
    <param>
      <key>width9</key>
      <value>1</value>
    </param>
    <param>
      <key>name</key>
      <value>"soft chips"</value>
    </param>
    <param>
      <key>nconnections</key>
      <value>2</value>
    </param>
    <param>
      <key>size</key>
      <value>burst_length/2</value>
    </param>
    <param>
      <key>srate</key>
      <value>samp_rate/2</value>
    </param>
    <param>
      <key>stemplot</key>
      <value>False</value>
    </param>
    <param>
      <key>tr_chan</key>
      <value>0</value>
    </param>
    <param>
      <key>tr_delay</key>
      <value>0</value>
    </param>
    <param>
      <key>tr_level</key>
      <value>0</value>
    </param>
    <param>
      <key>tr_mode</key>
      <value>qtgui.TRIG_MODE_TAG</value>
    </param>
    <param>
      <key>tr_slope</key>
      <value>qtgui.TRIG_SLOPE_POS</value>
    </param>
    <param>
      <key>tr_tag</key>
      <value>"es::event_type"</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>update_time</key>
      <value>0.10</value>
    </param>
    <param>
      <key>ylabel</key>
      <value>Amplitude</value>
    </param>
    <param>
      <key>yunit</key>
      <value>""</value>
    </param>
    <param>
      <key>ymax</key>
      <value>1</value>
    </param>
    <param>
      <key>ymin</key>
      <value>-1</value>
    </param>
  </block>
  <block>
    <key>qtgui_time_sink_x</key>
    <param>
      <key>autoscale</key>
      <value>True</value>
    </param>
    <param>
      <key>axislabels</key>
      <value>True</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>ctrlpanel</key>
      <value>False</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>entags</key>
      <value>True</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1168, 1404)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value>3,3,2,4</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>grid</key>
      <value>True</value>
    </param>
    <param>
      <key>id</key>
      <value>qtgui_time_sink_x_0_0</value>
    </param>
    <param>
      <key>legend</key>
      <value>False</value>
    </param>
    <param>
      <key>alpha1</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color1</key>
      <value>"blue"</value>
    </param>
    <param>
      <key>label1</key>
      <value>chips</value>
    </param>
    <param>
      <key>marker1</key>
      <value>0</value>
    </param>
    <param>
      <key>style1</key>
      <value>1</value>
    </param>
    <param>
      <key>width1</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha10</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color10</key>
      <value>"blue"</value>
    </param>
    <param>
      <key>label10</key>
      <value></value>
    </param>
    <param>
      <key>marker10</key>
      <value>-1</value>
    </param>
    <param>
      <key>style10</key>
      <value>1</value>
    </param>
    <param>
      <key>width10</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha2</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color2</key>
      <value>"red"</value>
    </param>
    <param>
      <key>label2</key>
      <value>bits</value>
    </param>
    <param>
      <key>marker2</key>
      <value>-1</value>
    </param>
    <param>
      <key>style2</key>
      <value>1</value>
    </param>
    <param>
      <key>width2</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha3</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color3</key>
      <value>"green"</value>
    </param>
    <param>
      <key>label3</key>
      <value></value>
    </param>
    <param>
      <key>marker3</key>
      <value>-1</value>
    </param>
    <param>
      <key>style3</key>
      <value>1</value>
    </param>
    <param>
      <key>width3</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha4</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color4</key>
      <value>"black"</value>
    </param>
    <param>
      <key>label4</key>
      <value></value>
    </param>
    <param>
      <key>marker4</key>
      <value>-1</value>
    </param>
    <param>
      <key>style4</key>
      <value>1</value>
    </param>
    <param>
      <key>width4</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha5</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color5</key>
      <value>"cyan"</value>
    </param>
    <param>
      <key>label5</key>
      <value></value>
    </param>
    <param>
      <key>marker5</key>
      <value>-1</value>
    </param>
    <param>
      <key>style5</key>
      <value>1</value>
    </param>
    <param>
      <key>width5</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha6</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color6</key>
      <value>"magenta"</value>
    </param>
    <param>
      <key>label6</key>
      <value></value>
    </param>
    <param>
      <key>marker6</key>
      <value>-1</value>
    </param>
    <param>
      <key>style6</key>
      <value>1</value>
    </param>
    <param>
      <key>width6</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha7</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color7</key>
      <value>"yellow"</value>
    </param>
    <param>
      <key>label7</key>
      <value></value>
    </param>
    <param>
      <key>marker7</key>
      <value>-1</value>
    </param>
    <param>
      <key>style7</key>
      <value>1</value>
    </param>
    <param>
      <key>width7</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha8</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color8</key>
      <value>"dark red"</value>
    </param>
    <param>
      <key>label8</key>
      <value></value>
    </param>
    <param>
      <key>marker8</key>
      <value>-1</value>
    </param>
    <param>
      <key>style8</key>
      <value>1</value>
    </param>
    <param>
      <key>width8</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha9</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color9</key>
      <value>"dark green"</value>
    </param>
    <param>
      <key>label9</key>
      <value></value>
    </param>
    <param>
      <key>marker9</key>
      <value>-1</value>
    </param>
    <param>
      <key>style9</key>
      <value>1</value>
    </param>
    <param>
      <key>width9</key>
      <value>1</value>
    </param>
    <param>
      <key>name</key>
      <value>""</value>
    </param>
    <param>
      <key>nconnections</key>
      <value>1</value>
    </param>
    <param>
      <key>size</key>
      <value>burst_length/2/2*0 + 56</value>
    </param>
    <param>
      <key>srate</key>
      <value>samp_rate/2</value>
    </param>
    <param>
      <key>stemplot</key>
      <value>False</value>
    </param>
    <param>
      <key>tr_chan</key>
      <value>0</value>
    </param>
    <param>
      <key>tr_delay</key>
      <value>1.0/(samp_rate/2)*10</value>
    </param>
    <param>
      <key>tr_level</key>
      <value>0</value>
    </param>
    <param>
      <key>tr_mode</key>
      <value>qtgui.TRIG_MODE_TAG</value>
    </param>
    <param>
      <key>tr_slope</key>
      <value>qtgui.TRIG_SLOPE_POS</value>
    </param>
    <param>
      <key>tr_tag</key>
      <value>"P1_P2"</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>update_time</key>
      <value>0.10</value>
    </param>
    <param>
      <key>ylabel</key>
      <value>Amplitude</value>
    </param>
    <param>
      <key>yunit</key>
      <value>""</value>
    </param>
    <param>
      <key>ymax</key>
      <value>3</value>
    </param>
    <param>
      <key>ymin</key>
      <value>-3</value>
    </param>
  </block>
  <block>
    <key>qtgui_time_sink_x</key>
    <param>
      <key>autoscale</key>
      <value>True</value>
    </param>
    <param>
      <key>axislabels</key>
      <value>True</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>ctrlpanel</key>
      <value>False</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>entags</key>
      <value>True</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1384, 668)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value>3,0,2,3</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>grid</key>
      <value>False</value>
    </param>
    <param>
      <key>id</key>
      <value>qtgui_time_sink_x_0_1</value>
    </param>
    <param>
      <key>legend</key>
      <value>False</value>
    </param>
    <param>
      <key>alpha1</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color1</key>
      <value>"blue"</value>
    </param>
    <param>
      <key>label1</key>
      <value></value>
    </param>
    <param>
      <key>marker1</key>
      <value>0</value>
    </param>
    <param>
      <key>style1</key>
      <value>1</value>
    </param>
    <param>
      <key>width1</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha10</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color10</key>
      <value>"blue"</value>
    </param>
    <param>
      <key>label10</key>
      <value></value>
    </param>
    <param>
      <key>marker10</key>
      <value>-1</value>
    </param>
    <param>
      <key>style10</key>
      <value>1</value>
    </param>
    <param>
      <key>width10</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha2</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color2</key>
      <value>"red"</value>
    </param>
    <param>
      <key>label2</key>
      <value></value>
    </param>
    <param>
      <key>marker2</key>
      <value>-1</value>
    </param>
    <param>
      <key>style2</key>
      <value>1</value>
    </param>
    <param>
      <key>width2</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha3</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color3</key>
      <value>"green"</value>
    </param>
    <param>
      <key>label3</key>
      <value></value>
    </param>
    <param>
      <key>marker3</key>
      <value>-1</value>
    </param>
    <param>
      <key>style3</key>
      <value>1</value>
    </param>
    <param>
      <key>width3</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha4</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color4</key>
      <value>"black"</value>
    </param>
    <param>
      <key>label4</key>
      <value></value>
    </param>
    <param>
      <key>marker4</key>
      <value>-1</value>
    </param>
    <param>
      <key>style4</key>
      <value>1</value>
    </param>
    <param>
      <key>width4</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha5</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color5</key>
      <value>"cyan"</value>
    </param>
    <param>
      <key>label5</key>
      <value></value>
    </param>
    <param>
      <key>marker5</key>
      <value>-1</value>
    </param>
    <param>
      <key>style5</key>
      <value>1</value>
    </param>
    <param>
      <key>width5</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha6</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color6</key>
      <value>"magenta"</value>
    </param>
    <param>
      <key>label6</key>
      <value></value>
    </param>
    <param>
      <key>marker6</key>
      <value>-1</value>
    </param>
    <param>
      <key>style6</key>
      <value>1</value>
    </param>
    <param>
      <key>width6</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha7</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color7</key>
      <value>"yellow"</value>
    </param>
    <param>
      <key>label7</key>
      <value></value>
    </param>
    <param>
      <key>marker7</key>
      <value>-1</value>
    </param>
    <param>
      <key>style7</key>
      <value>1</value>
    </param>
    <param>
      <key>width7</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha8</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color8</key>
      <value>"dark red"</value>
    </param>
    <param>
      <key>label8</key>
      <value></value>
    </param>
    <param>
      <key>marker8</key>
      <value>-1</value>
    </param>
    <param>
      <key>style8</key>
      <value>1</value>
    </param>
    <param>
      <key>width8</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha9</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color9</key>
      <value>"dark green"</value>
    </param>
    <param>
      <key>label9</key>
      <value></value>
    </param>
    <param>
      <key>marker9</key>
      <value>-1</value>
    </param>
    <param>
      <key>style9</key>
      <value>1</value>
    </param>
    <param>
      <key>width9</key>
      <value>1</value>
    </param>
    <param>
      <key>name</key>
      <value>"soft chips"</value>
    </param>
    <param>
      <key>nconnections</key>
      <value>2</value>
    </param>
    <param>
      <key>size</key>
      <value>burst_length/2</value>
    </param>
    <param>
      <key>srate</key>
      <value>samp_rate/2</value>
    </param>
    <param>
      <key>stemplot</key>
      <value>False</value>
    </param>
    <param>
      <key>tr_chan</key>
      <value>0</value>
    </param>
    <param>
      <key>tr_delay</key>
      <value>0</value>
    </param>
    <param>
      <key>tr_level</key>
      <value>0</value>
    </param>
    <param>
      <key>tr_mode</key>
      <value>qtgui.TRIG_MODE_TAG</value>
    </param>
    <param>
      <key>tr_slope</key>
      <value>qtgui.TRIG_SLOPE_POS</value>
    </param>
    <param>
      <key>tr_tag</key>
      <value>"es::event_type"</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>update_time</key>
      <value>0.10</value>
    </param>
    <param>
      <key>ylabel</key>
      <value>Amplitude</value>
    </param>
    <param>
      <key>yunit</key>
      <value>""</value>
    </param>
    <param>
      <key>ymax</key>
      <value>1</value>
    </param>
    <param>
      <key>ymin</key>
      <value>-1</value>
    </param>
  </block>
  <block>
    <key>qtgui_time_sink_x</key>
    <param>
      <key>autoscale</key>
      <value>False</value>
    </param>
    <param>
      <key>axislabels</key>
      <value>True</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>ctrlpanel</key>
      <value>False</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>entags</key>
      <value>True</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1168, 328)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value>1,0,2,4</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>grid</key>
      <value>False</value>
    </param>
    <param>
      <key>id</key>
      <value>qtgui_time_sink_x_1</value>
    </param>
    <param>
      <key>legend</key>
      <value>True</value>
    </param>
    <param>
      <key>alpha1</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color1</key>
      <value>"blue"</value>
    </param>
    <param>
      <key>label1</key>
      <value></value>
    </param>
    <param>
      <key>marker1</key>
      <value>-1</value>
    </param>
    <param>
      <key>style1</key>
      <value>1</value>
    </param>
    <param>
      <key>width1</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha10</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color10</key>
      <value>"blue"</value>
    </param>
    <param>
      <key>label10</key>
      <value></value>
    </param>
    <param>
      <key>marker10</key>
      <value>-1</value>
    </param>
    <param>
      <key>style10</key>
      <value>1</value>
    </param>
    <param>
      <key>width10</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha2</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color2</key>
      <value>"red"</value>
    </param>
    <param>
      <key>label2</key>
      <value></value>
    </param>
    <param>
      <key>marker2</key>
      <value>-1</value>
    </param>
    <param>
      <key>style2</key>
      <value>1</value>
    </param>
    <param>
      <key>width2</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha3</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color3</key>
      <value>"green"</value>
    </param>
    <param>
      <key>label3</key>
      <value></value>
    </param>
    <param>
      <key>marker3</key>
      <value>-1</value>
    </param>
    <param>
      <key>style3</key>
      <value>1</value>
    </param>
    <param>
      <key>width3</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha4</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color4</key>
      <value>"black"</value>
    </param>
    <param>
      <key>label4</key>
      <value></value>
    </param>
    <param>
      <key>marker4</key>
      <value>-1</value>
    </param>
    <param>
      <key>style4</key>
      <value>1</value>
    </param>
    <param>
      <key>width4</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha5</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color5</key>
      <value>"cyan"</value>
    </param>
    <param>
      <key>label5</key>
      <value></value>
    </param>
    <param>
      <key>marker5</key>
      <value>-1</value>
    </param>
    <param>
      <key>style5</key>
      <value>1</value>
    </param>
    <param>
      <key>width5</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha6</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color6</key>
      <value>"magenta"</value>
    </param>
    <param>
      <key>label6</key>
      <value></value>
    </param>
    <param>
      <key>marker6</key>
      <value>-1</value>
    </param>
    <param>
      <key>style6</key>
      <value>1</value>
    </param>
    <param>
      <key>width6</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha7</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color7</key>
      <value>"yellow"</value>
    </param>
    <param>
      <key>label7</key>
      <value></value>
    </param>
    <param>
      <key>marker7</key>
      <value>-1</value>
    </param>
    <param>
      <key>style7</key>
      <value>1</value>
    </param>
    <param>
      <key>width7</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha8</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color8</key>
      <value>"dark red"</value>
    </param>
    <param>
      <key>label8</key>
      <value></value>
    </param>
    <param>
      <key>marker8</key>
      <value>-1</value>
    </param>
    <param>
      <key>style8</key>
      <value>1</value>
    </param>
    <param>
      <key>width8</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha9</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color9</key>
      <value>"dark green"</value>
    </param>
    <param>
      <key>label9</key>
      <value></value>
    </param>
    <param>
      <key>marker9</key>
      <value>-1</value>
    </param>
    <param>
      <key>style9</key>
      <value>1</value>
    </param>
    <param>
      <key>width9</key>
      <value>1</value>
    </param>
    <param>
      <key>name</key>
      <value>""</value>
    </param>
    <param>
      <key>nconnections</key>
      <value>1</value>
    </param>
    <param>
      <key>size</key>
      <value>burst_length</value>
    </param>
    <param>
      <key>srate</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>stemplot</key>
      <value>False</value>
    </param>
    <param>
      <key>tr_chan</key>
      <value>0</value>
    </param>
    <param>
      <key>tr_delay</key>
      <value>1.0/samp_rate *100</value>
    </param>
    <param>
      <key>tr_level</key>
      <value>qt_thresh</value>
    </param>
    <param>
      <key>tr_mode</key>
      <value>qtgui.TRIG_MODE_AUTO</value>
    </param>
    <param>
      <key>tr_slope</key>
      <value>qtgui.TRIG_SLOPE_POS</value>
    </param>
    <param>
      <key>tr_tag</key>
      <value>""</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>update_time</key>
      <value>0.010</value>
    </param>
    <param>
      <key>ylabel</key>
      <value>Amplitude</value>
    </param>
    <param>
      <key>yunit</key>
      <value>""</value>
    </param>
    <param>
      <key>ymax</key>
      <value>20</value>
    </param>
    <param>
      <key>ymin</key>
      <value>-5</value>
    </param>
  </block>
  <block>
    <key>sigmf_source</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>filename</key>
      <value>/captures/adsb/20210127/MODE-S_2021-01-27T23:43:24.sigmf-data</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(24, 176)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>sigmf_source_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>type</key>
      <value>sc16</value>
    </param>
    <param>
      <key>repeat</key>
      <value>False</value>
    </param>
  </block>
  <block>
    <key>vcc_qt_hex_text</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1304, 1656)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value>3,7,2,3</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>vcc_qt_hex_text_0</value>
    </param>
  </block>
  <block>
    <key>virtual_sink</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1168, 1500)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_sink_0</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>frames</value>
    </param>
  </block>
  <block>
    <key>virtual_sink</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1104, 172)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_sink_1</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>pre-d</value>
    </param>
  </block>
  <block>
    <key>virtual_sink</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(648, 284)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_sink_3</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>trigger</value>
    </param>
  </block>
  <block>
    <key>virtual_sink</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(832, 980)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_sink_4</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>bits</value>
    </param>
  </block>
  <block>
    <key>virtual_sink</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1176, 580)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_sink_4_0</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>corrected_iq</value>
    </param>
  </block>
  <block>
    <key>virtual_sink</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1184, 860)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_sink_4_1</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>bits</value>
    </param>
  </block>
  <block>
    <key>virtual_source</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(112, 1948)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_source_0</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>real</value>
    </param>
  </block>
  <block>
    <key>virtual_source</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(32, 364)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_source_1_0</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>pre-d</value>
    </param>
  </block>
  <block>
    <key>virtual_source</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(32, 524)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_source_2</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>pre-d</value>
    </param>
  </block>
  <block>
    <key>virtual_source</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(56, 1420)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_source_4_0</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>bits</value>
    </param>
  </block>
  <block>
    <key>virtual_source</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(64, 876)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_source_4_0_0</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>corrected_iq</value>
    </param>
  </block>
  <block>
    <key>virtual_source</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1160, 1572)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_source_5</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>frames</value>
    </param>
  </block>
  <connection>
    <source_block_id>analog_agc2_xx_0</source_block_id>
    <sink_block_id>low_pass_filter_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_add_const_vxx_1</source_block_id>
    <sink_block_id>qtgui_time_sink_x_0_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_char_to_float_0_0</source_block_id>
    <sink_block_id>blocks_add_const_vxx_1</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_char_to_float_0_0_0</source_block_id>
    <sink_block_id>qtgui_time_sink_x_0_1</sink_block_id>
    <source_key>0</source_key>
    <sink_key>1</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_complex_to_mag_squared_0</source_block_id>
    <sink_block_id>blocks_moving_average_xx_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_complex_to_real_1</source_block_id>
    <sink_block_id>dc_blocker_xx_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_complex_to_real_1</source_block_id>
    <sink_block_id>qtgui_time_sink_x_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_interleaved_short_to_complex_0</source_block_id>
    <sink_block_id>blocks_multiply_const_xx_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_moving_average_xx_0</source_block_id>
    <sink_block_id>qtgui_time_sink_x_1</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_moving_average_xx_0</source_block_id>
    <sink_block_id>virtual_sink_3</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_multiply_const_xx_0</source_block_id>
    <sink_block_id>blocks_throttle_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_throttle_0</source_block_id>
    <sink_block_id>analog_agc2_xx_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>dc_blocker_xx_0</source_block_id>
    <sink_block_id>digital_binary_slicer_fb_2</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>dc_blocker_xx_0</source_block_id>
    <sink_block_id>qtgui_time_sink_x_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>1</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_binary_slicer_fb_0</source_block_id>
    <sink_block_id>digital_correlate_access_code_xx_ts_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_binary_slicer_fb_0</source_block_id>
    <sink_block_id>qtgui_number_sink_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_binary_slicer_fb_2</source_block_id>
    <sink_block_id>virtual_sink_4</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_binary_slicer_fb_2_0</source_block_id>
    <sink_block_id>blocks_char_to_float_0_0_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_binary_slicer_fb_2_0</source_block_id>
    <sink_block_id>virtual_sink_4_1</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_clock_recovery_mm_xx_0</source_block_id>
    <sink_block_id>digital_costas_loop_cc_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_correlate_access_code_tag_xx_0_0_1_2</source_block_id>
    <sink_block_id>digital_diff_decoder_bb_1</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_correlate_access_code_tag_xx_0_0_1_2_2</source_block_id>
    <sink_block_id>blocks_char_to_float_0_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_correlate_access_code_tag_xx_0_0_1_2_2</source_block_id>
    <sink_block_id>epy_block_1</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_correlate_access_code_xx_ts_0</source_block_id>
    <sink_block_id>blocks_tag_debug_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_costas_loop_cc_0</source_block_id>
    <sink_block_id>mapper_demapper_soft_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_costas_loop_cc_0</source_block_id>
    <sink_block_id>qtgui_const_sink_x_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_costas_loop_cc_0</source_block_id>
    <sink_block_id>virtual_sink_4_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_diff_decoder_bb_1</source_block_id>
    <sink_block_id>digital_correlate_access_code_tag_xx_0_0_1_2_2</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_pfb_clock_sync_xxx_0</source_block_id>
    <sink_block_id>digital_costas_loop_cc_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>epy_block_1</source_block_id>
    <sink_block_id>virtual_sink_0</sink_block_id>
    <source_key>out</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>low_pass_filter_0</source_block_id>
    <sink_block_id>fosphor_glfw_sink_c_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>low_pass_filter_0</source_block_id>
    <sink_block_id>fosphor_qt_sink_c_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>low_pass_filter_0</source_block_id>
    <sink_block_id>virtual_sink_1</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>low_pass_filter_0_0</source_block_id>
    <sink_block_id>digital_clock_recovery_mm_xx_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>low_pass_filter_0_0</source_block_id>
    <sink_block_id>digital_pfb_clock_sync_xxx_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>mapper_demapper_soft_0</source_block_id>
    <sink_block_id>digital_binary_slicer_fb_2_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>mapper_demapper_soft_0</source_block_id>
    <sink_block_id>qtgui_time_sink_x_0_1</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>pyqt_pdu_lambda_1</source_block_id>
    <sink_block_id>pyqt_pdu_lambda_2</sink_block_id>
    <source_key>pdus</source_key>
    <sink_key>pdus</sink_key>
  </connection>
  <connection>
    <source_block_id>sigmf_source_0</source_block_id>
    <sink_block_id>blocks_interleaved_short_to_complex_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>virtual_source_0</source_block_id>
    <sink_block_id>digital_binary_slicer_fb_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>virtual_source_1_0</source_block_id>
    <sink_block_id>blocks_complex_to_mag_squared_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>virtual_source_2</source_block_id>
    <sink_block_id>low_pass_filter_0_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>virtual_source_4_0</source_block_id>
    <sink_block_id>digital_correlate_access_code_tag_xx_0_0_1_2</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>virtual_source_4_0_0</source_block_id>
    <sink_block_id>blocks_complex_to_real_1</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>virtual_source_5</source_block_id>
    <sink_block_id>blocks_message_debug_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>print_pdu</sink_key>
  </connection>
  <connection>
    <source_block_id>virtual_source_5</source_block_id>
    <sink_block_id>epy_block_0_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>in</sink_key>
  </connection>
</flow_graph>
